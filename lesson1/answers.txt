1. В чем заключается суть ключевого слова global? Когда его применение целесообразно?

global позволяет определить глобальные переменные, которые видны в любом месте (области видимости) приложения.
судя по всему, реализовано это с помощью массива GLOBALS.
имеет смысл использовать для задания каких-то параметоров приложения, полагаю.

______________________________________________
2. Какие суперглобальные переменные вы знаете?

из того что вспомнил и пользовался сам - _POST, _GET, _SERVER, $_REQUEST
из того что подсмотрел - $GLOBALS, $_FILES, $_COOKIE, $_SESSION, $_ENV

________________________________________________________
3. Когда нужно использовать закрывающий дескриптор “?>“?

если файл содержит не только код на php, например.
возможно, в каких-то ранних версиях php он был обязателен
в xml стандарте, то что открыто, должно быть закрыто.

__________________________________________________
4. Что выведет программа в каждом случае и почему?
function changeX($x){
   $x += 5;
   echo $x;
}
$x = 1;
echo $x;
changeX($x);
echo $x;

программа выведет: 161
в функцию будет передано значение переменной. т.к. фактически, значение $x перед выполнением функции будет скопировано. в контексте функции, месту, которое содержит скопированное значение будет присвоено имя $x.
поэтому никакие изменения скопированного значения не скажутся на исходной ячейке памяти / исходной переменной $x

__________________________________________________
5. Что выведет программа в каждом случае и почему?
function test()
{
    static $a = 0;
    echo $a;
    $a++;
}
test();
test();
test();

программа выведет: 012
причина в том, что переменная $a задана как статическая.
такие переменные не удаляются после завершения выполнения функции интерпретатором php

___________________________________________________________________________________________________________________________
6. Как перевернуть массив? Есть массив array(‘h’, ‘e’, ‘l’, ‘l’, ‘o’), как из него получить array(‘o’, ‘l’, ‘l’, ‘e’, ‘h’)?

применить функцию array_reverse или
перебрать все элементы используя отрицательный индекс

________________________________________
7. Как перевернуть строку задом наперед?

применить встроенную функцию strrev

_____________________________________________
8. Что будет результатом работы данного кода?
$a=0;
if($b=$a)
    echo "One";
else
    echo "Two";

выведется - two
здесь внутри if выполняется присваивание. результат присваивания будт равен присвоенному значению, а это 0.
при приведении к boolean получается false.
________________________________________________________________________________________________________________________
9. Сгенерировать три случайных числа в диапазоне от 0 до 10. Если сумма этих чисел меньше 15, сгенерировать новую тройку.

$r1 = rand(0, 10);
$r2 = rand(0, 10);
$r3 = rand(0, 10);
if ($r1+$r2+$r3 < 15) {
    $r1 = rand(0, 10);
    $r2 = rand(0, 10);
    $r3 = rand(0, 10);
}

___________________________________
10. Какое число выведет данный код?
$i = 10;
$i += ++i + $i + $i++;
echo $i;

ошибку.
если ошибку в названии переменной i поправить, то 45
сначала проинкрементируется и изменится сам $i. он станет 11. затем он сложится 3 раза, а к результату будет прибавлен результат $i++.
итого 11+11+11+12

_____________________________________
11. Что выведет приведенный ниже код?
$a = "1";
$a[$a] = "2";
echo $a;

"12"